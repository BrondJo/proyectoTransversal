/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import AccesoADatos.AlumnoData;
import AccesoADatos.InscripcionData;
import AccesoADatos.MateriaData;
import java.awt.Color;
import java.util.List;
import java.util.TreeSet;
import javax.swing.table.DefaultTableModel;
import universidadgrupo71.entidades.Alumno;
import universidadgrupo71.entidades.Inscripcion;
import universidadgrupo71.entidades.Materia;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Rodri
 */
public class BuscarMateriaView extends javax.swing.JInternalFrame {

    private DefaultTableModel modeloTabla;
    private AlumnoData aluData = new AlumnoData();
    private MateriaData matData = new MateriaData();
    private InscripcionData insData = new InscripcionData(matData, aluData);
    private int idMateria;
    private String nota;

    /**
     * Creates new form BuscarMateriaView
     */
    public BuscarMateriaView() {
        initComponents();
        modeloTabla = (DefaultTableModel) tablaAlumnos.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        panelSuperior = new javax.swing.JPanel();
        botonCerrar = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textAnio = new javax.swing.JTextField();
        textId = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        botonPdf = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(600, 400));

        panelFondo.setBackground(new java.awt.Color(223, 232, 225));
        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelSuperior.setBackground(new java.awt.Color(2, 64, 126));

        botonCerrar.setBackground(new java.awt.Color(2, 64, 126));
        botonCerrar.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        botonCerrar.setForeground(new java.awt.Color(255, 255, 255));
        botonCerrar.setText("X");
        botonCerrar.setContentAreaFilled(false);
        botonCerrar.setOpaque(true);
        botonCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonCerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonCerrarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonCerrarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                botonCerrarMouseReleased(evt);
            }
        });
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        labelTitulo.setForeground(new java.awt.Color(255, 255, 255));
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("Búsqueda por Materia");

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSuperiorLayout.createSequentialGroup()
                .addContainerGap(555, Short.MAX_VALUE)
                .addComponent(botonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelSuperiorLayout.createSequentialGroup()
                    .addGap(69, 69, 69)
                    .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(60, Short.MAX_VALUE)))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSuperiorLayout.createSequentialGroup()
                    .addContainerGap(10, Short.MAX_VALUE)
                    .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        panelFondo.add(panelSuperior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 50));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("ID DE LA MATERIA");
        panelFondo.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 130, 40));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("AÑO");
        panelFondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 120, 40));

        textAnio.setEditable(false);
        textAnio.setBackground(new java.awt.Color(230, 244, 245));
        textAnio.setForeground(new java.awt.Color(153, 153, 153));
        textAnio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textAnio.setText("Año correspondiente");
        textAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAnioActionPerformed(evt);
            }
        });
        panelFondo.add(textAnio, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 160, 40));

        textId.setBackground(new java.awt.Color(230, 244, 245));
        textId.setForeground(new java.awt.Color(153, 153, 153));
        textId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textId.setText("Código único de la materia");
        textId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textIdFocusLost(evt);
            }
        });
        textId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIdActionPerformed(evt);
            }
        });
        textId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textIdKeyTyped(evt);
            }
        });
        panelFondo.add(textId, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 160, 40));

        botonBuscar.setBackground(new java.awt.Color(223, 232, 225));
        botonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupaIco.png"))); // NOI18N
        botonBuscar.setContentAreaFilled(false);
        botonBuscar.setEnabled(false);
        botonBuscar.setOpaque(true);
        botonBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonBuscarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                botonBuscarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                botonBuscarMouseReleased(evt);
            }
        });
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });
        panelFondo.add(botonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 40, 40));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("MATERIA");
        panelFondo.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 120, 40));

        textNombre.setEditable(false);
        textNombre.setBackground(new java.awt.Color(230, 244, 245));
        textNombre.setForeground(new java.awt.Color(153, 153, 153));
        textNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textNombre.setText("Nombre");
        textNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNombreActionPerformed(evt);
            }
        });
        panelFondo.add(textNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 160, 40));

        tablaAlumnos.setBackground(new java.awt.Color(230, 244, 245));
        tablaAlumnos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "APELLIDO", "DNI", "NOTA"
            }
        ));
        tablaAlumnos.setRowHeight(30);
        tablaAlumnos.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(tablaAlumnos);

        panelFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 560, 150));

        botonPdf.setBackground(new java.awt.Color(223, 232, 225));
        botonPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pdfIco.png"))); // NOI18N
        botonPdf.setContentAreaFilled(false);
        botonPdf.setEnabled(false);
        botonPdf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonPdf.setOpaque(true);
        botonPdf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonPdfMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonPdfMouseExited(evt);
            }
        });
        botonPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPdfActionPerformed(evt);
            }
        });
        panelFondo.add(botonPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 60, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAnioActionPerformed

    private void textIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIdActionPerformed

    }//GEN-LAST:event_textIdActionPerformed

    private void botonBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBuscarMouseEntered
        if (botonBuscar.isEnabled()) {
            botonBuscar.setBackground(new Color(230, 244, 245));
        }
    }//GEN-LAST:event_botonBuscarMouseEntered

    private void botonBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBuscarMouseExited
        if (botonBuscar.isEnabled()) {
            botonBuscar.setBackground(new Color(223, 232, 225));
        }
    }//GEN-LAST:event_botonBuscarMouseExited

    private void botonBuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBuscarMousePressed
        if (botonBuscar.isEnabled()) {
            botonBuscar.setBackground(new Color(170, 194, 205));
        }
    }//GEN-LAST:event_botonBuscarMousePressed

    private void botonBuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBuscarMouseReleased
        if (botonBuscar.isEnabled()) {
            botonBuscar.setBackground(new Color(230, 244, 245));
        }
    }//GEN-LAST:event_botonBuscarMouseReleased

    private void textNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNombreActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        Materia materia = matData.buscarMateria(Integer.parseInt(textId.getText()));
        if (materia != null) {
            textNombre.setText(materia.getNombre());
            textNombre.setForeground(Color.BLACK);
            textAnio.setText(materia.getAnio() + "");
            textAnio.setForeground(Color.BLACK);
            llenarTabla();
            botonPdf.setEnabled(true);
        } else {
            limpiar();
        }

    }//GEN-LAST:event_botonBuscarActionPerformed

    private void textIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIdKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
//        if((c < 'a'&&c > 'z')||(c < 'A'&&c > 'Z')||(c < ' '&&c > ' ')){
//            evt.consume();
//        }
    }//GEN-LAST:event_textIdKeyTyped

    private void textIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textIdFocusGained
        if (textId.getText().equals("Código único de la materia")) {
            textId.setText("");
            textId.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_textIdFocusGained

    private void textIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textIdFocusLost
        if (textId.getText().equals("")) {
            textId.setText("Código único de la materia");
            textId.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_textIdFocusLost

    private void textIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIdKeyReleased

        if ((!textId.getText().equals("")) && (!textId.getText().equals("Código único de la materia"))) {
            botonBuscar.setEnabled(true);
            idMateria = Integer.parseInt(textId.getText());
        } else {
            limpiar();
        }
    }//GEN-LAST:event_textIdKeyReleased

    private void botonCerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCerrarMouseEntered
        botonCerrar.setBackground(new Color(59, 99, 133));
    }//GEN-LAST:event_botonCerrarMouseEntered

    private void botonCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCerrarMouseExited
        botonCerrar.setBackground(new Color(15, 63, 119));
    }//GEN-LAST:event_botonCerrarMouseExited

    private void botonCerrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCerrarMousePressed
        botonCerrar.setBackground(new Color(59, 99, 133));
    }//GEN-LAST:event_botonCerrarMousePressed

    private void botonCerrarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCerrarMouseReleased
        botonCerrar.setBackground(new Color(59, 99, 133));
    }//GEN-LAST:event_botonCerrarMouseReleased

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonCerrarActionPerformed

    private void botonPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPdfActionPerformed

        try {
            Document documento = new Document();

            String ruta = System.getProperty("user.home");
            String ubicacion = "/Desktop/";
            String nombreArchivo = "Alumnos inscriptos en "
                    + matData.buscarMateria(idMateria).getNombre() + ".pdf ";

            //El OptionPane muestra la carpeta, concatenando la ruta, la ubicación y el nombre del archivo
            //y permite editar el texto por el usuario, cambiando la carpeta de destino
            String ubicacionEspecificada = JOptionPane.showInputDialog(
                    "Indique la carpeta de destino", ruta + ubicacion + nombreArchivo);
            try {
                PdfWriter.getInstance(documento, new FileOutputStream(ubicacionEspecificada));
            } catch (DocumentException ex) {
                JOptionPane.showMessageDialog(null, "Error al trabajar con el documento", "Ocurrió un problema", 0);
            }
            documento.open();

            PdfPTable tabla = new PdfPTable(tablaAlumnos.getColumnCount());

            for (int i = 0; i < tablaAlumnos.getColumnCount(); i++) {
                tabla.addCell(tablaAlumnos.getColumnName(i));
            }
            System.out.println("cantidad de filas de la tabla: " + tablaAlumnos.getRowCount());
            System.out.println("cantidad de columnas de la tabla: " + tablaAlumnos.getColumnCount());

//El for "j" recorre las filas de la tabla
//Por cada fila, el for "i" recorre cada una de las columnas y le asigna el valor obtenido de la tablaAlumnos
            System.out.println("Alumnos");
            for (int j = 0; j < tablaAlumnos.getRowCount(); j++) {
                System.out.println("");
                for (int i = 0; i < tablaAlumnos.getColumnCount(); i++) {
                    System.out.print(tablaAlumnos.getValueAt(j, i).toString() + " ");
                    tabla.addCell(tablaAlumnos.getValueAt(j, i).toString());
                }
            }
            try {
                documento.add(tabla);

            } catch (DocumentException ex) {
                JOptionPane.showMessageDialog(this, ex, "No se encontró la carpeta", 0);
                System.err.println(Arrays.toString(ex.getStackTrace()));
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "Busque el archivo en\n" + ubicacionEspecificada, "Se descargó el archivo PDF", 1);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex, "No se pudo crear el archivo", 0);
            System.err.println(Arrays.toString(ex.getStackTrace()));
        }

    }//GEN-LAST:event_botonPdfActionPerformed


    private void botonPdfMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPdfMouseEntered
        if (botonPdf.isEnabled()) {
            botonPdf.setBackground(new Color(230, 244, 245));
        }
    }//GEN-LAST:event_botonPdfMouseEntered

    private void botonPdfMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPdfMouseExited
        if (botonPdf.isEnabled()) {
            botonPdf.setBackground(new Color(223, 232, 225));
        }
    }//GEN-LAST:event_botonPdfMouseExited

    private void llenarTabla() {

        tablaAlumnos.removeAll();
        modeloTabla.setRowCount(0);
        List listaAlumnos = insData.obtenerAlumnosXMateria(idMateria);
        System.out.println(insData.obtenerAlumnosXMateria(idMateria));
        System.out.println(listaAlumnos);
        TreeSet<Alumno> alumnos = new TreeSet<>(listaAlumnos);
        for (Alumno alumno : alumnos) {
            System.out.println(insData.obtenerInscripcionesPorAlumno(alumno.getId()));
            for (Inscripcion inscripcion : insData.obtenerInscripcionesPorAlumno(alumno.getId())) {
                if (inscripcion.getMateria().getId() == idMateria) {
                    nota = (int) inscripcion.getNota() + "";
                    if (nota.equals("0")) {
                        nota = "No asignada";
                    }
                }
            }
            modeloTabla.addRow(new Object[]{alumno.getId(), alumno.getNombre(), alumno.getApellido(), alumno.getDni(), nota});
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonPdf;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTextField textAnio;
    private javax.swing.JTextField textId;
    private javax.swing.JTextField textNombre;
    // End of variables declaration//GEN-END:variables

    private void limpiarTabla() {
        int filas = modeloTabla.getRowCount();
        for (int i = 0; i < filas; i++) {
            modeloTabla.removeRow(0);
        }
        for (int i = 0; i < 4; i++) {
            modeloTabla.addRow(new Object[4]);
        }
    }

    private void limpiar() {
        botonBuscar.setEnabled(false);
        botonPdf.setEnabled(false);
        textNombre.setText("Nombre");
        textNombre.setForeground(Color.GRAY);
        textAnio.setText("Año correspondiente");
        textAnio.setForeground(Color.GRAY);

        limpiarTabla();
    }
}
